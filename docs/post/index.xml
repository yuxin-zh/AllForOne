<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on AllForOne&#39;s Site,Young genneration comes!</title>
    <link>https://yuxin-zh.github.io/AllForOne/post/</link>
    <description>Recent content in Posts on AllForOne&#39;s Site,Young genneration comes!</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 31 Oct 2024 16:26:55 +0800</lastBuildDate>
    <atom:link href="https://yuxin-zh.github.io/AllForOne/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo Usage Erros</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hugo-usage-erros/</link>
      <pubDate>Thu, 31 Oct 2024 16:26:55 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/hugo-usage-erros/</guid>
      <description>&lt;p&gt;Anything here is ok ,fine&lt;/p&gt;</description>
    </item>
    <item>
      <title>SRS</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/srs/</link>
      <pubDate>Thu, 26 May 2022 16:08:57 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/srs/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;&#xA;&lt;h1 id=&#34;1introduction&#34;&gt;1.introduction&lt;/h1&gt;&#xA;&lt;h2 id=&#34;11purpose&#34;&gt;1.1Purpose&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;This specification is written to analyze and summarize the basic requirements of the project and describe the basic requirements and functional characteristics of the functional modules.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The name of this project is called &amp;ldquo;Super Store Data Analysis&amp;rdquo;, and users can get the following information through this website&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Top 10 products with sales volume greater than 1000&lt;/li&gt;&#xA;&lt;li&gt;total sales in each order priority where quantity is even number&lt;/li&gt;&#xA;&lt;li&gt;10 countries whichi have lowest minimutes sales&lt;/li&gt;&#xA;&lt;li&gt;top 10 customers based on the no of letters in their time&lt;/li&gt;&#xA;&lt;li&gt;total quantity in each market where pofit is greater than 100&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;12-how-to-run-the-project&#34;&gt;1.2 How to run the project&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;you need to install node8.0+  and you&amp;rsquo;d better use vs code open our Three.js project &amp;amp;&amp;amp; run java part in idea which is deployed on tomcat.&lt;/li&gt;&#xA;&lt;li&gt;After all the preparations have been made,you need to run tomcat firstly , and then open Three.js project in vs code ,then open a terminal in it, input &amp;ldquo;npm run dev&amp;rdquo;，and wait a minute ,it takes time to deploy website,then you can see what our video shows.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;2project-overview&#34;&gt;2.Project Overview&lt;/h1&gt;&#xA;&lt;h2 id=&#34;21product-description&#34;&gt;2.1product description&lt;/h2&gt;&#xA;&lt;p&gt;Build a web3d website through Three.js, and realize information interaction and user registration, login and other functions through jsp and mysql, and display the data through flourish.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Project_Show</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/project_show/</link>
      <pubDate>Thu, 19 May 2022 17:30:32 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/project_show/</guid>
      <description>&lt;p&gt;[Toc]&lt;/p&gt;&#xA;&lt;h1 id=&#34;project-presentation&#34;&gt;Project Presentation&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1小组成员介绍&#34;&gt;1.小组成员介绍&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;组长：张钰昕&lt;/li&gt;&#xA;&lt;li&gt;组员：刘博予 吴平 张琳 周宇璇 刘士铭⛏&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2团队分工&#34;&gt;2.团队分工&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;前后端以及使用Hive处理数据：张钰昕 刘博予 吴平 刘士铭&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;使用Flourish处理并展示数据：周宇璇 张琳&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3项目效果展示&#34;&gt;3.项目效果展示&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220519174336142.png&#34; alt=&#34;image-20220519174336142&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220519174355305.png&#34; alt=&#34;image-20220519174355305&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;注册和登录页面&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220519174739871.png&#34; alt=&#34;image-20220519174739871&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;&#x9;&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220519174810424.png&#34; alt=&#34;image-20220519174810424&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;数据处理后的效果展示暂时未完成&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Bingda</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/bingda/</link>
      <pubDate>Thu, 14 Apr 2022 17:10:35 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/bingda/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;我还没转换成ap模式 所以你就暂时使用路由连接&lt;/strong&gt;（只用给路由器通电 然后连接网线一端插在路由的Lan随便一个接口 另一端插小车上）🚚&lt;/li&gt;&#xA;&lt;li&gt;你电脑也要连接这个路由的wifi信号  WLAN名字是：419-1  管理密码是418418418&lt;/li&gt;&#xA;&lt;li&gt;然后登录tplogin.cn  输入管理密码 进入界面点击设备管理看小车的ip地址 应该是192.168.0.101&lt;/li&gt;&#xA;&lt;li&gt;然后点击tools压缩包里的nomachine安装  然后 👉&lt;strong&gt;管理员的方式运行&lt;/strong&gt;👈nomachine&lt;/li&gt;&#xA;&lt;li&gt;&lt;img src=&#34;1.png&#34; alt=&#34;image-20220414171526481&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;img src=&#34;2.png&#34; alt=&#34;image-20220414171739145&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;点击进去后账号和密码随便取一个 记住就行（&lt;strong&gt;一定要是管理员运行  不然会闪退&lt;/strong&gt;）&lt;/li&gt;&#xA;&lt;li&gt;然后你进去会看到一个ubuntu18的界面 点开terminal📑&lt;/li&gt;&#xA;&lt;li&gt;一般的运行流程是这样的（我以打开摄像头为例子奥）&#xA;&lt;ol&gt;&#xA;&lt;li&gt;先打开一个terminal 输入roscore  回车✍&lt;/li&gt;&#xA;&lt;li&gt;在打开一个terminal 输入roslaunch robot_vision robot_camera.launch🎃&lt;/li&gt;&#xA;&lt;li&gt;再新开一个terminal输入rqt_image_view 回车 这样就可以查看图像了👀&lt;/li&gt;&#xA;&lt;li&gt;其他的都差不多的 就是要注意每新发布一个话题 你都需要新开一个terminal并且roscore是需要第一个打开的&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Internet</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/internet/</link>
      <pubDate>Sun, 20 Mar 2022 15:48:16 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/internet/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;&#xA;&lt;h1 id=&#34;计算机网络&#34;&gt;计算机网络&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1前言&#34;&gt;1.前言&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;计算机网络是 &lt;strong&gt;互连的（互联互通）&lt;/strong&gt; **自治（无主从关系）**的计算机集合&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;五大功能：&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;数据通信&lt;/strong&gt;：连通性&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;资源共享&lt;/strong&gt;：对硬件 软件 数据的共享&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;分布式处理&lt;/strong&gt;：多台计算机共同承担同一工作任务的不同部分&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;提高可靠性&lt;/strong&gt;：替代机的存在&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;负载均衡&lt;/strong&gt;：将任务均衡分配给各台计算机&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;计网的组成：硬件，软件，&lt;strong&gt;协议&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;工作方式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;边缘部分：用户直接使用：C/S方式 P2P方式&lt;/li&gt;&#xA;&lt;li&gt;核心部分：为边缘部分服务&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;功能组成：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通信子网：实现 &lt;strong&gt;数据通信&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;资源子网：实现 &lt;strong&gt;资源共享/数据处理&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220320160038673.png&#34; alt=&#34;image-20220320160038673&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;计算机网络的分类：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;按分布范围分：&lt;strong&gt;广域网WAN&lt;/strong&gt; &lt;strong&gt;城域网MAN&lt;/strong&gt; &lt;strong&gt;局域网WAN&lt;/strong&gt; &lt;strong&gt;个人区域网PAN&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;按使用者分：公用网，专用网&lt;/li&gt;&#xA;&lt;li&gt;按交换技术分：电路交换，报文交换，分组交换&lt;/li&gt;&#xA;&lt;li&gt;按拓扑结构分：&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220320161116413.png&#34; alt=&#34;image-20220320161116413&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;按传输技术分：广播式网络（共享公共信道） 点对点：使用 &lt;strong&gt;分组存储转发和路由选择机制&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分组转发：指互联网中路由器转发ip分组的物理过程和数据报转发机制。在网络中，一台主机通常是与一台路由器相链接，这台路由器叫主机的 &lt;strong&gt;默认路由器&lt;/strong&gt;，又称为 &lt;strong&gt;第一跳路由器&lt;/strong&gt;或 &lt;strong&gt;缺省路由器&lt;/strong&gt; ,源路由器  目的主机所链接的路由器叫做 &lt;strong&gt;目的路由器&lt;/strong&gt; ；分组转发通常分为直接和间接，源主机与目的主机的在一个网络就叫做直接转发 否则就为间接转发&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2标准化工作&#34;&gt;2.标准化工作&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;标准的分类：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;法定标准：由权威机构指定的正式的，合法的标准  例如OSI&lt;/li&gt;&#xA;&lt;li&gt;事实标准：某些公司的产品在竞争中占据了主流；例如TCP/IP&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;RFC：因特网标准的一种形式  并不代表所有RFC都是因特网标准 因特网标准一定是RFC形式；RFC上升为因特网标准需要四个阶段：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1）&lt;strong&gt;因特网草案&lt;/strong&gt;（此时并不是RFC文档）&lt;/li&gt;&#xA;&lt;li&gt;2）&lt;strong&gt;建议标准&lt;/strong&gt;   成为了RFC文档&lt;/li&gt;&#xA;&lt;li&gt;3）&lt;strong&gt;草案标准&lt;/strong&gt;  2011年以后取消&lt;/li&gt;&#xA;&lt;li&gt;4）因特网标准&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;标准化工作的相关组织&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ISO ITU IEEE&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3互联网相关的指标&#34;&gt;3.互联网相关的指标&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;速率&lt;/strong&gt;：即数据率或输出传输率，比特率&#xA;&lt;ul&gt;&#xA;&lt;li&gt;比特 1/0位&lt;/li&gt;&#xA;&lt;li&gt;连接在计算机网络上的主机在数字信道上传送数据 &lt;strong&gt;位数的速率&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;单位是k/s kb/s Gb/s Tb/s&lt;/li&gt;&#xA;&lt;li&gt;需要注意的使形容速度的不同单位的换算关系与存储是不同的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;带宽&lt;/strong&gt;：用来表示网络的通信线路传送数据的能力，通常是指单位时间内从网络中的某一点到另一点所能通过的&amp;quot;最高数据率&amp;quot;  电磁波的传播速率2*10^8m/s&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;吞吐量&lt;/strong&gt;：表示在单位时间内通过某个网络（接口 信道）的数据量。单位为b/s lb/s Mb/s&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;时延&lt;/strong&gt;：指数据报从网络的一段传送到另一端所需的事件。也叫 &lt;strong&gt;延迟 或 迟延&lt;/strong&gt;。单位是ms&#xA;&lt;ul&gt;&#xA;&lt;li&gt;发送时延📫==数据长度/信道带宽&lt;/li&gt;&#xA;&lt;li&gt;传播时延📰==取决于电磁波传播速度和链路长度&lt;/li&gt;&#xA;&lt;li&gt;排队时延🚉==等待输出/输入 链路可用所需的时间&lt;/li&gt;&#xA;&lt;li&gt;处理时延🥓==检错 找出口的时间&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;往返时延RTT&lt;/strong&gt;：从发送方发送数据开始，到发送方接收到接收方的确认，总共经历的时延&lt;/li&gt;&#xA;&lt;li&gt;利用率：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;信道利用率: 主要看链路多长时间上有数据传输&lt;/li&gt;&#xA;&lt;li&gt;网络利用率: 信道利用率加权平均值&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;C:%5CUsers%5C%E8%AF%B7%E8%BE%93%E5%85%A5%E5%A7%93%E5%90%8D%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220523143516780.png&#34; alt=&#34;image-20220523143516780&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hive</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hive/</link>
      <pubDate>Wed, 23 Feb 2022 15:24:22 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/hive/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;&#xA;&lt;h2 id=&#34;1hive-introduction&#34;&gt;1.Hive Introduction&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HIve是一个开源的 &lt;strong&gt;数据仓库&lt;/strong&gt;软件，用于read，write，manage直接存储在HDFS中的大型数据集文件&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HQL用于数据查询和分析&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HIve是基于读取的因此不适用于高频率写入操作的事务处理&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HIve功能&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提取/转载/加载 （ETL）数据&lt;/li&gt;&#xA;&lt;li&gt;存储 查询和分析HDFS或Hbase中存储的大规模数据&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;查询是通过MapReduce完成的，Notice🎉：并非所有查询都需要Mapreduce&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Extension：hive为了执行效率考虑，简单的查询如select，不带count，sum,group by😀这样的都不走mapreduce，直接读取hdfs文件进行filter过滤&lt;/li&gt;&#xA;&lt;li&gt;当查询语句中的过滤条件只是分区字段的情况下不会进行mapreduce&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;hive-site-xml 有个配置参数&lt;code&gt;hive.fetch.task.conversion = more&lt;/code&gt;将该参数设置为more时，简单查询就不会走mapreduce了，色湖之为minimal，那么任何查询都会走mapreduce🚩&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hive允许用户编写自己的函数,有如下三种类型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用户定义函数 UDF&lt;/li&gt;&#xA;&lt;li&gt;用户定义聚合函数 UDAF&lt;/li&gt;&#xA;&lt;li&gt;用户定义的表生成函数 UDTF&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hive缺点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;不支持处理session&lt;/li&gt;&#xA;&lt;li&gt;无法修改表数据（无法更新、删除、插入）只能通过文件追加和重新导入数据&lt;/li&gt;&#xA;&lt;li&gt;无法为列编制索引（支持索引，但无法提高查询速度）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hive数据存储&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hive可以解析数据，所以将数据导入Hive表只需将数据移动到表所在的目录（数据在HDFS）,如果数据在本地文件系统，则需要将数据复制到表所在的目录中。🀄&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从本地：Example：在本地文件系统船舰一个名为local.txt的文件（数据之间空格间隔），然后执行了&lt;code&gt;load data local inpath&#39;绝对路径/local.txt into table local;就可以 使用&lt;/code&gt;hadoop fs -ls&lt;/p&gt;&#xA;&lt;p&gt;路径/local 查看是否导入成功&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从HDFS:在HIve中创建data_hdfs表，表中假设有两个字段：name,age;&lt;/p&gt;&#xA;&lt;p&gt;将文件从本地上传到hdfs：&lt;code&gt;hadoop fs -put data_hdfs.txt /data&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;hive导入`load data inpath &amp;lsquo;data/data_hdfs.txt&amp;rsquo; into table data_hdfs;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HIve客户端&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Thrift Server：为所有支持Thrift的编程语言的请i去提供服务（几乎所有主流语言）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Thrift实际上是实现了C/S模式，通过代码生成工具将thrift文生成服务器端和客户端代码（可以为不同语言），从而实现服务端和客户端跨语言的支持。用户在Thirft文件中声明自己的服务，这些服务经过编译后会生成相应语言的代码文件，然后客户端调用服务，服务器端提服务便可以了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Thrift是Facebook于2007年开发的跨语言的rpc服框架，提供多语言的编译功能，并提供多种服务器工做模式；用户经过Thrift的IDL（接口定义语言）来描述接口函数及数据类型，而后经过Thrift的编译环境生成各类语言类型的接口文件，用户能够根据本身的须要采用不一样的语言开发客户端代码和服务器端代码。git&lt;/p&gt;&#xA;&lt;p&gt;例如，我想开发一个快速计算的RPC服务，它主要经过接口函数getInt对外提供服务，这个RPC服务的getInt函数使用用户传入的参数，通过复杂的计算，计算出一个整形值返回给用户；服务器端使用java语言开发，而调用客户端能够是java、c、python等语言开发的程序，在这种应用场景下，咱们只须要使用Thrift的IDL描述一下getInt函数（以.thrift为后缀的文件），而后使用Thrift的多语言编译功能，将这个IDL文件编译成C、java、python几种语言对应的“特定语言接口文件”（每种语言只须要一条简单的命令便可编译完成），这样拿到对应语言的“特定语言接口文件”以后，就能够开发客户端和服务器端的代码了，开发过程当中只要接口不变，客户端和服务器端的开发能够独立的进行。apa&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;JDBC Driver：用于hive和java之间建立连接&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;ODBC Driver&lt;/strong&gt;：允许自持ODBC协议的应用程序连接到hive 🏷&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HIve Service&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zookeeper</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/zookeeper/</link>
      <pubDate>Wed, 23 Feb 2022 15:22:46 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/zookeeper/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;&#xA;&lt;h1 id=&#34;zookeeper&#34;&gt;Zookeeper&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1introduction&#34;&gt;1.Introduction😀&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-分布式系统&#34;&gt;1.1 分布式系统&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;分布式系统定义为一种 &lt;strong&gt;软件系统&lt;/strong&gt;，它由独立的计算实体组成，这些独立的计算实体通过就按及网络连接在一起，计算机网络的组件相互通信的协调以实现共同的目标&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;主要特征🤕&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;资源共享：在任何地方都可以使用系统中的资源，例如存储空间，计算能力，数据和服务等&lt;/li&gt;&#xA;&lt;li&gt;可拓展性：从硬件和软件的角度逐步拓展和改进系统的可能行&lt;/li&gt;&#xA;&lt;li&gt;并发性：多个用户可以同时使用以完成同一任务或不同任务的系统功能&lt;/li&gt;&#xA;&lt;li&gt;性能和可拓展性：确保系统的响应时间不会随着总负载的增加和降低&lt;/li&gt;&#xA;&lt;li&gt;容错：即使某些组件发生故障，仍可以确保系统始终可用&lt;/li&gt;&#xA;&lt;li&gt;通过API进行抽象：确保对最终用户隐藏系统的各个组件，仅向他们展示最终服务💊&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;**分布式计算的谬论：**设计分布式系统很难，而将一组单独的计算实体编写为程序一起运行时甚至回更难，设计人员和开发员经常做一些假设。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;假设条件&lt;/th&gt;&#xA;          &lt;th&gt;实际情况&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;网络可靠&lt;/td&gt;&#xA;          &lt;td&gt;实际上，网络或组件之间的通讯可能失败&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;延迟为0&lt;/td&gt;&#xA;          &lt;td&gt;分布式系统的用户可以从全球的任何一个地方连接到该系统，但是数据传输需要时间。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;带宽无限大&lt;/td&gt;&#xA;          &lt;td&gt;Nope&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;网络安全&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;系统在设计的时候并没有认真考虑应用程序的安全性，因此会面临拒绝服务攻击&lt;/strong&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;拓扑不变&lt;/td&gt;&#xA;          &lt;td&gt;随着时间的流逝，有些组件将会被删除&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;唯一管理员&lt;/td&gt;&#xA;          &lt;td&gt;分布式系统并不会独立运行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;运输零成本&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;网络是同质的&lt;/td&gt;&#xA;          &lt;td&gt;网络由大量不同的实体组成&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;h2 id=&#34;分布式系统中实现协调时遇到的挑战&#34;&gt;分布式系统中实现协调时遇到的挑战：&lt;/h2&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Spring</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/spring/</link>
      <pubDate>Wed, 16 Feb 2022 00:55:19 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/spring/</guid>
      <description></description>
    </item>
    <item>
      <title>Linux</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/linux/</link>
      <pubDate>Wed, 16 Feb 2022 00:54:24 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/linux/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;&#xA;&lt;h1 id=&#34;linux安装与配置&#34;&gt;LINUX安装与配置&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1虚拟机安装&#34;&gt;1.虚拟机安装&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;新建虚拟机，选择自定义&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;image-20220216110052133&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选择默认版，然后下一步&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;image-20220216110149122&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;然后点击稍后安装操作系统&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;3.png&#34; alt=&#34;image-20220216110236313&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;选择centos 7 64位&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;4.png&#34; alt=&#34;image-20220216110344768&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;更改安装位置到你希望安装的位置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;5.png&#34; alt=&#34;image-20220216110449120&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;以下电脑配置高的可以选择配置多个处理器&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;6.png&#34; alt=&#34;image-20220216110548327&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;虚拟机内存默认是1G，如果有需要可按需调配，这里配置4G&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;7.png&#34; alt=&#34;image-20220216110645172&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;网络类型选择使用仅主机模式网络&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;9.png&#34; alt=&#34;image-20220216110740366&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SCSI控制器选择LSI Logic（默认）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;10.png&#34; alt=&#34;image-20220216110830862&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;磁盘选择创建新的&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;11.png&#34; alt=&#34;image-20220216110917795&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;最大磁盘大小选择默认的20G&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;12.png&#34; alt=&#34;image-20220216110959094&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;完成安装&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;13.png&#34; alt=&#34;image-20220216111151311&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2安装镜像&#34;&gt;2.安装镜像&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击编辑虚拟机设置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;14.png&#34; alt=&#34;image-20220216111449910&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击CD/DVD&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;15.png&#34; alt=&#34;image-20220216111646912&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击使用ISO镜像文件，然后选择安装的cent的镜像&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;16.png&#34; alt=&#34;image-20220216111841398&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;开启虚拟机，选择install centos 7 回车&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;17.png&#34; alt=&#34;image-20220216112012212&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装结束后选择中文&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;18.png&#34; alt=&#34;image-20220216112135715&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击软件选择&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;19.png&#34; alt=&#34;image-20220216112234481&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这里我们选择最小安装，你也可以根据自己的需要选择&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;20.png&#34; alt=&#34;image-20220216112339907&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;然后是点击安装目标位置，直接 点击完成即可&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;再点击网络和主机名，点击配置&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;21.png&#34; alt=&#34;image-20220216112609255&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击ipv4设置，讲虚拟机设置静态ip，ip地址为192.168.xx.xx,&lt;strong&gt;注意将DNS服务器和网关设置一致，子网掩码设置为255.255.255.0&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;22.png&#34; alt=&#34;image-20220216113112798&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击ipv6 切换为忽略，然后完成。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;23.png&#34; alt=&#34;image-20220216113150112&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击完成&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;24.png&#34; alt=&#34;image-20220216114058471&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设置主机名，点击应用&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;111.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;完成&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设置root密码&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;25.png&#34; alt=&#34;image-20220216114342482&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设置完成后，重启。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;26.png&#34; alt=&#34;image-20220216114443133&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可能需要等待一段时间&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;27.png&#34; alt=&#34;image-20220216114529989&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;输入密码，登录成功 &lt;strong&gt;登陆时用户名为root，密码是你设置的那个密码&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hbase</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hbase/</link>
      <pubDate>Wed, 16 Feb 2022 00:53:15 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/hbase/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;https://www.jianshu.com/p/bcc54f63abe4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;[toc]&lt;/p&gt;&#xA;&lt;h1 id=&#34;hbase&#34;&gt;Hbase&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1overview-hbase&#34;&gt;1.Overview Hbase&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;是一种分布式 可拓展 支持海量数据存储的NoSQL数据库&lt;/li&gt;&#xA;&lt;li&gt;hdfs不支持随机写，基于HDFS，hbase可以实现随时写&lt;/li&gt;&#xA;&lt;li&gt;hadoop和habase都是存储大量数据的 但不同的是hadoop的分布式文件系统中，数据分布在网络的不同节点中 而hbase是个数据库 列行的形式存储&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;11数据模型&#34;&gt;1.1数据模型&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;NameSpace：类似于关系数据库中的database概念，每个ns下有多个表。Hbase自带两个ns：hbase和default.hbase。 hbase存放的是HBase内置的表，default表是用户默认使用的命名空间。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Region：表的切片 。刚开始创建就一个region&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Row：Hbase表中的每行数据都由一个Rowkey和多个列组成，数据是按照Rowkey的字典序进行存储的，&lt;strong&gt;并且查询时只能根据rowkey进行查询&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Column：hbase每个列都由Column Family和Column Qualifier（列限定符）进行限定&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;TimeStamp：用于标识数据的不同版本，数据仔写入时，不指定的话，系统会自动为其加上该字段，值为写入hbase的时间&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Cell：由{Rowkey，clolumn Family，clolumn Qualifier，timeStamp}唯一确定的单元，&lt;strong&gt;cell中的数据是没有类型的，全部是字节码的形式存在。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;12-hbase基本架构&#34;&gt;1.2 Hbase基本架构&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Store&amp;ndash;&amp;gt;Region&amp;ndash;&amp;gt;Region Server(分布式服务)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RegionServer：DML 对表中数据进行操作&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Data：get，put（提交新数据覆盖元数据，而不是修改元数据），delete&lt;/li&gt;&#xA;&lt;li&gt;Region：splitRegion，compactRegion     切分和合并&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Master挂掉的话，数据的增删改查仍可以，但是做表结构的不行  &lt;strong&gt;master管理ddl&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Master：DDL 对表进行操作&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Table：create,delete,alter  &lt;strong&gt;关于表进行操作&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;RegionServer：分配Regions到每个Regionserver，监控每个RegionServer的status&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Zookeeper：&lt;strong&gt;HBase通过Zookeeper来做master的高可用&lt;/strong&gt;、RegionServer的监控，元数据的入口以及集群配置的维护等工作&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;13-hbase的安装和配置&#34;&gt;1.3 Hbase的安装和配置&lt;/h3&gt;&#xA;&lt;h3 id=&#34;14-hbase-shell操作&#34;&gt;1.4 HBase Shell操作&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#general&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;status：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#ddl&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1）add 列族到表中&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;表名&amp;#39;&lt;/span&gt;，NAME&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;列族名&amp;#39;&lt;/span&gt;，VERSIONS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;t1&amp;#39;&lt;/span&gt;, &lt;span class=&#34;s1&#34;&gt;&amp;#39;f1&amp;#39;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAME&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;f2&amp;#39;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;IN_MEMORY&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; true&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAME&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;f3&amp;#39;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;VERSIONS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt; 5&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; delte 列族&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s2&#34;&gt;&amp;#34;ns:表名&amp;#34;&lt;/span&gt;,NAME&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;列族名&amp;#39;&lt;/span&gt;，METHOD&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns:表名&amp;#39;&lt;/span&gt;,&lt;span class=&#34;s1&#34;&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;f1&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;change table-scope的属性 like below&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;table &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;name&amp;#39;&lt;/span&gt;,MAX_FILESIZE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;134217728&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;设置coprocessor   不知道是否仔niit范围内，可以课下学学&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;5&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 通过hbase命令行设置habse的配置信息&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; Regin_Replication&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;table_name&amp;#39;&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REGION_REPLICATION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;2&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;7&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;disable/enable table split or merge&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;tn&amp;#39;&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SPLIT_ENABLED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;false&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter &lt;span class=&#34;s1&#34;&gt;&amp;#39;tn&amp;#39;&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;MERGE_ENABLED&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;false&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alter_status:#Get the status of the alter command. Indicates the number of regions of thetable that have received the updated schema ,Passed by table name.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;create:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;create &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns:tn&amp;#39;&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,VERSIONS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;,&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;desc &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns;tn&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;disable:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;disable &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns:tn&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;disable_all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drop: should be executed after &lt;span class=&#34;s2&#34;&gt;&amp;#34;disable&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drop &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns:tn&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drop_all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;enable:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns:tn&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;enable_all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;exits:判断表是否存在&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;exists &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns;tb&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;get_table: &lt;span class=&#34;c1&#34;&gt;#Get the given table name and return it as an actual object to be manipulated by the user&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#namespacelis&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;create_namespace &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns1&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;describe_namespace &lt;span class=&#34;s1&#34;&gt;&amp;#39;ns1&amp;#39;&lt;/span&gt; desc不行&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;drop_namespace &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;list_namespace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#DML&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;append &lt;span class=&#34;s1&#34;&gt;&amp;#39;t1&amp;#39;&lt;/span&gt;,&lt;span class=&#34;s1&#34;&gt;&amp;#39;r1&amp;#39;&lt;/span&gt;,&lt;span class=&#34;s1&#34;&gt;&amp;#39;c1&amp;#39;&lt;/span&gt;,&lt;span class=&#34;s1&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;相当于String的append value加在原有value的后&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;count: 计数一个表中的row数量&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;count &lt;span class=&#34;s1&#34;&gt;&amp;#39;tn&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;或者建立一个t-&amp;gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;tn&amp;#39;&lt;/span&gt;的reference&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;t.count也可以&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#####Get &amp;amp;&amp;amp;&amp;amp;&amp;amp; Scan&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;get的最大范围是指定到rowkey，甚至还可以指定到时间戳&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#利用scan查看同一个cell之前已经put的数据（scan时可以设置是否开启RAW模式，开启RAW模式会返回已添加删除标记但是未实际进行删除的数据）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#get获取某个cell保留的（未添加删除标记）的所有version数据（在describe 表名，查看列族VERSIONS是多少，get就会多少数据(cell的数据大于等于VERSIONS的数量)）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;15hbase的读写流程&#34;&gt;1.5Hbase的读写流程&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;对于hbase来说  读比写要慢&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hadoop Learning</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hadoop-learning/</link>
      <pubDate>Wed, 16 Feb 2022 00:42:52 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/hadoop-learning/</guid>
      <description>&lt;p&gt;[toc]&lt;/p&gt;&#xA;&lt;h1 id=&#34;hadoop相关概念&#34;&gt;Hadoop相关概念&lt;/h1&gt;&#xA;&lt;p&gt;BIg Data&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;Volume  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;Velocity（快速） &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;Variety (结构化数据和非结构化数据)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;Value(低价值密度)：价值密度的大小与数据总量的大小成反比&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;HIVE：存储 查询和分析存储在hdfs上的大量数据&lt;/p&gt;&#xA;&lt;p&gt;缺点 ：不支持事务，不可以修改数据，只可以通过文件追加和重新上传  速度很慢&lt;/p&gt;&#xA;&lt;p&gt;ZOOkeeper“zn+1哥服务器允许n此错误。&lt;/p&gt;&#xA;&lt;p&gt;结构化数据&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;数据库这种有二维表格的&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;半结构化数据&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;类似于一个文件，但是可以导入mysql这种结构化数据中&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;非结构化数据&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;无法转化，视频，ppt等&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Hadoop&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;分布式系统基础架构：多台服务器共同完成某一任务&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;主要解决海量数据的存储和分析计算&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;三大发行版本&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Apache 最基础&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Cloudera   Horntownworks&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Hadoop优势&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;高可靠性：底层维护多个数据副本，即使某个元素或存储出现故障，data-loss is avoided&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;高扩展性：在集群间分配任务数据，可方便扩展节点，动态增加和动态删除&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;高效性：hadoop是并行工作的&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;高容错性：能够自动将失败任务重新分配&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;hadoop组成（important）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hadoop 1.x:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;HDFS:数据存储   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;Mapduce：计算+资源调度&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;Common：辅助工具&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hadoop 2.x:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;多了Yarn用于资源调度&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Hadoop 3.x：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#x9;在组成上没有区别&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;HDFS数据存储&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/git/</link>
      <pubDate>Tue, 15 Feb 2022 00:01:02 +0800</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/git/</guid>
      <description>&lt;p&gt;[TOC]&lt;/p&gt;&#xA;&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1版本控制系统vcs&#34;&gt;1.版本控制系统（VCS)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-基本概念----行内代码&#34;&gt;1.1 基本概念    &lt;code&gt;...&lt;/code&gt;行内代码&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;版本控制系统（VCS）最基本的功能就是版本控制。而所谓版本控制，意思就是在文件的修改历史中保存修改历史，让i方便对文件的i修改工作。&lt;/li&gt;&#xA;&lt;li&gt;我们常用的主流文本编辑器的undo功能其实就是版本控制。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;但是VCS和文本编辑器的撤销功能相比，有一个很重要的区别就是：&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于程序代码而言：修改的生命周期很长，如果采用每次改动自动保存的形式来保存修改历史，将会导致改动历史非常频繁和无章可循。所以和文本编辑器的撤销功能不同，VCS保存修改历史，使用的是&lt;strong&gt;主动提交改动&lt;/strong&gt;的机制。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2分布式版本控制系统dvcs&#34;&gt;2.分布式版本控制系统(DVCS)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-工作模型&#34;&gt;2.1 工作模型&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式（DVCS）与VCS的区别在于，分布式VCS除了中央仓库之外，还有本地仓库：团队的每一个成员的机器上都有一份本地昂库，这个仓库包含了所有版本历史，换句话说在这种工作模型内，你是和本地仓库交互。&lt;/li&gt;&#xA;&lt;li&gt;工作流程&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提交代码到本地仓库&lt;/li&gt;&#xA;&lt;li&gt;在服务器上创建一个中央仓库，并把1中的提交推送到服务器的中央仓库。&lt;/li&gt;&#xA;&lt;li&gt;其他工作人员将中央仓库的所有内容克隆到本地，拥有了各自的本地仓库，此时进行并行开发&lt;/li&gt;&#xA;&lt;li&gt;在职过后的开发过程中，么个人都会独立负责开发一个功能，在这个功能的开发过程中，每个人都会把它的每一步改动提交到本地仓库（由于本地提交毋须立即推送到中央仓库，所以提交的内容不一定要是一个完整的功能额模块，而可以是某个步骤）&lt;/li&gt;&#xA;&lt;li&gt;当完成了某个功能的开发时，可以把与该功能相关的所有提交 &lt;strong&gt;从本地仓库推送到中央仓库&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;而每次有人把新的提交推送到中央仓库是，另外的人就可以选择把这些提交同步到自己的机器上，并把他们和自己的本地代码合并&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22优缺点分析&#34;&gt;2.2优缺点分析&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;😵优点：①大多数操作可以在本地运行，速度更快。②由于可以提交到本地，因此可以分步提交代码，把代码提交做的更细，而不是一个提交包含很多代码，难以review也难以回溯。&lt;/li&gt;&#xA;&lt;li&gt;🤠缺点：由于每一个旧机器都需要有完整的本地仓库，所以初次获取代码需要获取项目比较费时②本地占用的存储比中央式高&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3使用git管理代码&#34;&gt;3.使用Git管理代码&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-前期准备&#34;&gt;3.1 前期准备&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Github创建远程仓库 （.gitignore设置项目类型，是git仓库中的一个特俗的文本文件，记录了你不希望提交到仓库的目录和文件的名称或类型&lt;/li&gt;&#xA;&lt;li&gt;点击右边的Clone or downloda，然后把仓库的Clone地址复制到截切版&lt;/li&gt;&#xA;&lt;li&gt;在你喜欢的任意一个位置，打开Git Bash,&lt;strong&gt;输入Git clone 刚复制的地址&lt;/strong&gt;（该过程可能会需要你去输入Github的用户名和密码）&lt;/li&gt;&#xA;&lt;li&gt;克隆完毕后，你的目录中会出现.git的隐藏目录，改了目录就是你的本地仓库，你的所有把那本信息都会存在这里。而.git所在的目录成为工作目录。&lt;/li&gt;&#xA;&lt;li&gt;一些git的基本指令在这里就不详细介绍了，可以查阅Git官方文档&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;4git基本工作模型&#34;&gt;4.Git基本工作模型&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;由于git在工作时，必须保证自己的本地仓库与中央仓库保持一致，因此，当你第一次从中央仓库拉去代码后，你的同事又push了一次，那么当你想要把自己的commits提交上去时，就需要先拉取同事的代码到本地。😧&lt;/li&gt;&#xA;&lt;li&gt;当push时出现冲突：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在现实的团队开发中，全队时同时并行开发的，所以必然会出现当一人push代码时，中央仓库已经被其他同事先一步push了的情况。&lt;/li&gt;&#xA;&lt;li&gt;那这种情况下，当我们像上面介绍的那样使用git pull指令拉取代码时，他并不会像之前那样直接结束，而是会出现一个输入提交信息的界面，这是因为pull操作返现不仅远程仓库有本地每天有的commits，本地也有远端仓库不具备的commits，它就会把远端和本地独有的commit合并，自动生成一个新的commit&lt;/li&gt;&#xA;&lt;li&gt;另一种情况，当出现冲突的部分是你和你的同事对某一个文件的某一处进行了不同的修改，Git就无法直接处理了，关于这点会在之后的文章中介绍🦄&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5headmasterbranch的使用讲解&#34;&gt;5.Head、master、branch的使用讲解&lt;/h2&gt;&#xA;&lt;p&gt;👇👇👇👇👇👇👇👇👇👇👇👇&lt;/p&gt;&#xA;&lt;p&gt;When Typed &amp;ldquo;git log&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/02/14/nUwiuFzc2vDJ13g.png&#34; alt=&#34;image-20220210161411687.png&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;第一行的commit后面的括号里的 &lt;em&gt;HEAD-&amp;gt; main&lt;/em&gt;，是只想这个commit的引用。在Git操作中，经常会需要对指定Commit进行操作，而每一个Commit都会有它唯一的指定方式——它的SHA-1校验和，也就是每个commit中那串黄色的字符。由于SHA-1重复的概率极低，因此你可以使用它来指代某一个commit，也可以只是用他的前几位来指代。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Head ：当前的Commit的引用：也就是说当前工作目录所对应的Commit。All in all,Commit在哪里，Head就在哪里。、&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Branch：是Git中的另一个引用，Head除了可以指向commit，还可以指branch；当他指向branch时，会通过这个branch来简介地指向某个commit；Besides:person_frowning:当Head在提交时自动向前移动时，它会带着它所指向地Branch一起移动。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如上图 HEAD-&amp;gt;main,main就是当前分支的名字。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/02/14/9xeTpcd86Zky72Q.png&#34; alt=&#34;image-20220210162748358.png&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;当你输入Git commit,Head就会带着这个分支，移向下一个commit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://s2.loli.net/2022/02/14/BWpratdZP3NOhJM.png&#34; alt=&#34;image-20220210162916120.png&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;你可以通过git log指令 对这个逻辑进行验证，这里就不详细说明了&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/test-chinese/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://yuxin-zh.github.io/AllForOne/p/test-chinese/</guid>
      <description>&lt;p&gt;wwwwww&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
