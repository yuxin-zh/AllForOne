<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on AllForOne&#39;s Site,Your genneration comes!</title>
    <link>https://yuxin-zh.github.io/AllForOne/post/</link>
    <description>Recent content in Posts on AllForOne&#39;s Site,Your genneration comes!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Apr 2022 17:10:35 +0800</lastBuildDate><atom:link href="https://yuxin-zh.github.io/AllForOne/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bingda</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/bingda/</link>
      <pubDate>Thu, 14 Apr 2022 17:10:35 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/bingda/</guid>
      <description> 我还没转换成ap模式 所以你就暂时使用路由连接（只用给路由器通电 然后连接网线一端插在路由的Lan随便一个接口 另一端插小车上）🚚 你电脑也要连接这个路由的wifi信号 WLAN名字是：419-1 管理密码是418418418 然后登录tplogin.cn 输入管理密码 进入界面点击设备管理看小车的ip地址 应该是192.168.0.101 然后点击tools压缩包里的nomachine安装 然后 👉管理员的方式运行👈nomachine   点击进去后账号和密码随便取一个 记住就行（一定要是管理员运行 不然会闪退） 然后你进去会看到一个ubuntu18的界面 点开terminal📑 一般的运行流程是这样的（我以打开摄像头为例子奥）  先打开一个terminal 输入roscore 回车✍ 在打开一个terminal 输入roslaunch robot_vision robot_camera.launch🎃 再新开一个terminal输入rqt_image_view 回车 这样就可以查看图像了👀 其他的都差不多的 就是要注意每新发布一个话题 你都需要新开一个terminal并且roscore是需要第一个打开的    </description>
    </item>
    
    <item>
      <title>Internet</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/internet/</link>
      <pubDate>Sun, 20 Mar 2022 15:48:16 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/internet/</guid>
      <description>[TOC]
计算机网络 1.前言   计算机网络是 互连的（互联互通） **自治（无主从关系）**的计算机集合
  五大功能：
  数据通信：连通性
  资源共享：对硬件 软件 数据的共享
  分布式处理：多台计算机共同承担同一工作任务的不同部分
  提高可靠性：替代机的存在
  负载均衡：将任务均衡分配给各台计算机
  计网的组成：硬件，软件，协议
  工作方式：
 边缘部分：用户直接使用：C/S方式 P2P方式 核心部分：为边缘部分服务    功能组成：
 通信子网：实现 数据通信 资源子网：实现 资源共享/数据处理    计算机网络的分类：
 按分布范围分：广域网WAN 城域网MAN 局域网WAN 个人区域网PAN 按使用者分：公用网，专用网 按交换技术分：电路交换，报文交换，分组交换 按拓扑结构分： 按传输技术分：广播式网络（共享公共信道） 点对点：使用 分组存储转发和路由选择机制  分组转发：指互联网中路由器转发ip分组的物理过程和数据报转发机制。在网络中，一台主机通常是与一台路由器相链接，这台路由器叫主机的 默认路由器，又称为 第一跳路由器或 缺省路由器 ,源路由器 目的主机所链接的路由器叫做 目的路由器 ；分组转发通常分为直接和间接，源主机与目的主机的在一个网络就叫做直接转发 否则就为间接转发      2.</description>
    </item>
    
    <item>
      <title>Hive</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hive/</link>
      <pubDate>Wed, 23 Feb 2022 15:24:22 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/hive/</guid>
      <description>[TOC]
1.Hive Introduction   HIve是一个开源的 数据仓库软件，用于read，write，manage直接存储在HDFS中的大型数据集文件
  HQL用于数据查询和分析
  HIve是基于读取的因此不适用于高频率写入操作的事务处理
  HIve功能
 提取/转载/加载 （ETL）数据 存储 查询和分析HDFS或Hbase中存储的大规模数据 查询是通过MapReduce完成的，Notice🎉：并非所有查询都需要Mapreduce  Extension：hive为了执行效率考虑，简单的查询如select，不带count，sum,group by😀这样的都不走mapreduce，直接读取hdfs文件进行filter过滤 当查询语句中的过滤条件只是分区字段的情况下不会进行mapreduce   hive-site-xml 有个配置参数hive.fetch.task.conversion = more将该参数设置为more时，简单查询就不会走mapreduce了，色湖之为minimal，那么任何查询都会走mapreduce🚩    Hive允许用户编写自己的函数,有如下三种类型：
 用户定义函数 UDF 用户定义聚合函数 UDAF 用户定义的表生成函数 UDTF    Hive缺点：
 不支持处理session 无法修改表数据（无法更新、删除、插入）只能通过文件追加和重新导入数据 无法为列编制索引（支持索引，但无法提高查询速度）    Hive数据存储
  Hive可以解析数据，所以将数据导入Hive表只需将数据移动到表所在的目录（数据在HDFS）,如果数据在本地文件系统，则需要将数据复制到表所在的目录中。🀄
  从本地：Example：在本地文件系统船舰一个名为local.txt的文件（数据之间空格间隔），然后执行了load data local inpath&#39;绝对路径/local.txt into table local;就可以 使用hadoop fs -ls</description>
    </item>
    
    <item>
      <title>Zookeeper</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/zookeeper/</link>
      <pubDate>Wed, 23 Feb 2022 15:22:46 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/zookeeper/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Spring</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/spring/</link>
      <pubDate>Wed, 16 Feb 2022 00:55:19 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/spring/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/linux/</link>
      <pubDate>Wed, 16 Feb 2022 00:54:24 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/linux/</guid>
      <description>[TOC]
LINUX安装与配置 1.虚拟机安装  新建虚拟机，选择自定义    选择默认版，然后下一步
  然后点击稍后安装操作系统
  选择centos 7 64位
  更改安装位置到你希望安装的位置
  以下电脑配置高的可以选择配置多个处理器
  虚拟机内存默认是1G，如果有需要可按需调配，这里配置4G
  网络类型选择使用仅主机模式网络
  SCSI控制器选择LSI Logic（默认）
  磁盘选择创建新的
  最大磁盘大小选择默认的20G
  完成安装
  2.安装镜像   点击编辑虚拟机设置
  点击CD/DVD
  点击使用ISO镜像文件，然后选择安装的cent的镜像
  开启虚拟机，选择install centos 7 回车
  安装结束后选择中文
  点击软件选择
  这里我们选择最小安装，你也可以根据自己的需要选择
  然后是点击安装目标位置，直接 点击完成即可</description>
    </item>
    
    <item>
      <title>Hbase</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hbase/</link>
      <pubDate>Wed, 16 Feb 2022 00:53:15 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/hbase/</guid>
      <description>1  &amp;lt;a href=https://www.jianshu.com/p/bcc54f63abe4&amp;gt;&amp;lt;/a&amp;gt;   [toc]
Hbase 1.Overview Hbase  是一种分布式 可拓展 支持海量数据存储的NoSQL数据库 hdfs不支持随机写，基于HDFS，hbase可以实现随时写 hadoop和habase都是存储大量数据的 但不同的是hadoop的分布式文件系统中，数据分布在网络的不同节点中 而hbase是个数据库 列行的形式存储  1.1数据模型   NameSpace：类似于关系数据库中的database概念，每个ns下有多个表。Hbase自带两个ns：hbase和default.hbase。 hbase存放的是HBase内置的表，default表是用户默认使用的命名空间。
  Region：表的切片 。刚开始创建就一个region
  Row：Hbase表中的每行数据都由一个Rowkey和多个列组成，数据是按照Rowkey的字典序进行存储的，并且查询时只能根据rowkey进行查询
  Column：hbase每个列都由Column Family和Column Qualifier（列限定符）进行限定
  TimeStamp：用于标识数据的不同版本，数据仔写入时，不指定的话，系统会自动为其加上该字段，值为写入hbase的时间
  Cell：由{Rowkey，clolumn Family，clolumn Qualifier，timeStamp}唯一确定的单元，cell中的数据是没有类型的，全部是字节码的形式存在。
  1.2 Hbase基本架构  Store&amp;ndash;&amp;gt;Region&amp;ndash;&amp;gt;Region Server(分布式服务)  RegionServer：DML 对表中数据进行操作  Data：get，put（提交新数据覆盖元数据，而不是修改元数据），delete Region：splitRegion，compactRegion 切分和合并     Master挂掉的话，数据的增删改查仍可以，但是做表结构的不行 master管理ddl  Master：DDL 对表进行操作  Table：create,delete,alter 关于表进行操作 RegionServer：分配Regions到每个Regionserver，监控每个RegionServer的status   Zookeeper：HBase通过Zookeeper来做master的高可用、RegionServer的监控，元数据的入口以及集群配置的维护等工作    1.</description>
    </item>
    
    <item>
      <title>Hadoop Learning</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/hadoop-learning/</link>
      <pubDate>Wed, 16 Feb 2022 00:42:52 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/hadoop-learning/</guid>
      <description>[toc]
Hadoop相关概念 BIg Data
1 2 3 4  Volume Velocity（快速） Variety (结构化数据和非结构化数据) Value(低价值密度)：价值密度的大小与数据总量的大小成反比   HIVE：存储 查询和分析存储在hdfs上的大量数据
缺点 ：不支持事务，不可以修改数据，只可以通过文件追加和重新上传 速度很慢
ZOOkeeper“zn+1哥服务器允许n此错误。
结构化数据
1  数据库这种有二维表格的   半结构化数据
1  类似于一个文件，但是可以导入mysql这种结构化数据中   非结构化数据
1  无法转化，视频，ppt等   Hadoop
1 2  分布式系统基础架构：多台服务器共同完成某一任务 主要解决海量数据的存储和分析计算   三大发行版本
1 2 3  Apache 最基础 Cloudera Horntownworks   Hadoop优势
1 2 3 4  高可靠性：底层维护多个数据副本，即使某个元素或存储出现故障，data-loss is avoided 高扩展性：在集群间分配任务数据，可方便扩展节点，动态增加和动态删除 高效性：hadoop是并行工作的 高容错性：能够自动将失败任务重新分配   hadoop组成（important）</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/git/</link>
      <pubDate>Tue, 15 Feb 2022 00:01:02 +0800</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/git/</guid>
      <description>[TOC]
Git 1.版本控制系统（VCS) 1.1 基本概念 ...行内代码  版本控制系统（VCS）最基本的功能就是版本控制。而所谓版本控制，意思就是在文件的修改历史中保存修改历史，让i方便对文件的i修改工作。 我们常用的主流文本编辑器的undo功能其实就是版本控制。 但是VCS和文本编辑器的撤销功能相比，有一个很重要的区别就是：  对于程序代码而言：修改的生命周期很长，如果采用每次改动自动保存的形式来保存修改历史，将会导致改动历史非常频繁和无章可循。所以和文本编辑器的撤销功能不同，VCS保存修改历史，使用的是主动提交改动的机制。    2.分布式版本控制系统(DVCS) 2.1 工作模型  分布式（DVCS）与VCS的区别在于，分布式VCS除了中央仓库之外，还有本地仓库：团队的每一个成员的机器上都有一份本地昂库，这个仓库包含了所有版本历史，换句话说在这种工作模型内，你是和本地仓库交互。 工作流程  提交代码到本地仓库 在服务器上创建一个中央仓库，并把1中的提交推送到服务器的中央仓库。 其他工作人员将中央仓库的所有内容克隆到本地，拥有了各自的本地仓库，此时进行并行开发 在职过后的开发过程中，么个人都会独立负责开发一个功能，在这个功能的开发过程中，每个人都会把它的每一步改动提交到本地仓库（由于本地提交毋须立即推送到中央仓库，所以提交的内容不一定要是一个完整的功能额模块，而可以是某个步骤） 当完成了某个功能的开发时，可以把与该功能相关的所有提交 从本地仓库推送到中央仓库 而每次有人把新的提交推送到中央仓库是，另外的人就可以选择把这些提交同步到自己的机器上，并把他们和自己的本地代码合并    2.2优缺点分析  😵优点：①大多数操作可以在本地运行，速度更快。②由于可以提交到本地，因此可以分步提交代码，把代码提交做的更细，而不是一个提交包含很多代码，难以review也难以回溯。 🤠缺点：由于每一个旧机器都需要有完整的本地仓库，所以初次获取代码需要获取项目比较费时②本地占用的存储比中央式高  3.使用Git管理代码 3.1 前期准备  Github创建远程仓库 （.gitignore设置项目类型，是git仓库中的一个特俗的文本文件，记录了你不希望提交到仓库的目录和文件的名称或类型 点击右边的Clone or downloda，然后把仓库的Clone地址复制到截切版 在你喜欢的任意一个位置，打开Git Bash,输入Git clone 刚复制的地址（该过程可能会需要你去输入Github的用户名和密码） 克隆完毕后，你的目录中会出现.git的隐藏目录，改了目录就是你的本地仓库，你的所有把那本信息都会存在这里。而.git所在的目录成为工作目录。 一些git的基本指令在这里就不详细介绍了，可以查阅Git官方文档  4.Git基本工作模型  由于git在工作时，必须保证自己的本地仓库与中央仓库保持一致，因此，当你第一次从中央仓库拉去代码后，你的同事又push了一次，那么当你想要把自己的commits提交上去时，就需要先拉取同事的代码到本地。😧 当push时出现冲突：  在现实的团队开发中，全队时同时并行开发的，所以必然会出现当一人push代码时，中央仓库已经被其他同事先一步push了的情况。 那这种情况下，当我们像上面介绍的那样使用git pull指令拉取代码时，他并不会像之前那样直接结束，而是会出现一个输入提交信息的界面，这是因为pull操作返现不仅远程仓库有本地每天有的commits，本地也有远端仓库不具备的commits，它就会把远端和本地独有的commit合并，自动生成一个新的commit 另一种情况，当出现冲突的部分是你和你的同事对某一个文件的某一处进行了不同的修改，Git就无法直接处理了，关于这点会在之后的文章中介绍🦄    5.Head、master、branch的使用讲解 👇👇👇👇👇👇👇👇👇👇👇👇
When Typed &amp;ldquo;git log&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://yuxin-zh.github.io/AllForOne/p/test-chinese/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yuxin-zh.github.io/AllForOne/p/test-chinese/</guid>
      <description>wwwwww</description>
    </item>
    
  </channel>
</rss>
